/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "GTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GTS20__factory>;
    getContractFactory(
      name: "WGANG",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WGANG__factory>;
    getContractFactory(
      name: "ERC721NFTMarketV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721NFTMarketV1__factory>;
    getContractFactory(
      name: "ICollectionWhitelistChecker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICollectionWhitelistChecker__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IGTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGTS20__factory>;
    getContractFactory(
      name: "IPancakeBunnies",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeBunnies__factory>;
    getContractFactory(
      name: "IWGANG",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWGANG__factory>;
    getContractFactory(
      name: "PancakeBunniesWhitelistChecker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeBunniesWhitelistChecker__factory>;
    getContractFactory(
      name: "MockGTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockGTS20__factory>;
    getContractFactory(
      name: "MockNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockNFT__factory>;
    getContractFactory(
      name: "PancakeBunnies",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeBunnies__factory>;
    getContractFactory(
      name: "WBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WBNB__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "GTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GTS20>;
    getContractAt(
      name: "WGANG",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WGANG>;
    getContractAt(
      name: "ERC721NFTMarketV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721NFTMarketV1>;
    getContractAt(
      name: "ICollectionWhitelistChecker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICollectionWhitelistChecker>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IGTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGTS20>;
    getContractAt(
      name: "IPancakeBunnies",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeBunnies>;
    getContractAt(
      name: "IWGANG",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWGANG>;
    getContractAt(
      name: "PancakeBunniesWhitelistChecker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeBunniesWhitelistChecker>;
    getContractAt(
      name: "MockGTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockGTS20>;
    getContractAt(
      name: "MockNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockNFT>;
    getContractAt(
      name: "PancakeBunnies",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeBunnies>;
    getContractAt(
      name: "WBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WBNB>;
    getContractAt(
      name: "ERC721Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
