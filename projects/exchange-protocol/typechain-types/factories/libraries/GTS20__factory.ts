/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GTS20, GTS20Interface } from "../../libraries/GTS20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ee338038062000ee383398101604081905262000034916200012c565b600262000042838262000225565b50600362000051828262000225565b50506004805460ff1916601217905550620002f1565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008f57600080fd5b81516001600160401b0380821115620000ac57620000ac62000067565b604051601f8301601f19908116603f01168101908282118183101715620000d757620000d762000067565b81604052838152602092508683858801011115620000f457600080fd5b600091505b83821015620001185785820183015181830184015290820190620000f9565b600093810190920192909252949350505050565b600080604083850312156200014057600080fd5b82516001600160401b03808211156200015857600080fd5b62000166868387016200007d565b935060208501519150808211156200017d57600080fd5b506200018c858286016200007d565b9150509250929050565b600181811c90821680620001ab57607f821691505b602082108103620001cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022057600081815260208120601f850160051c81016020861015620001fb5750805b601f850160051c820191505b818110156200021c5782815560010162000207565b5050505b505050565b81516001600160401b0381111562000241576200024162000067565b620002598162000252845462000196565b84620001d2565b602080601f831160018114620002915760008415620002785750858301515b600019600386901b1c1916600185901b1785556200021c565b600085815260208120601f198616915b82811015620002c257888601518255948401946001909101908401620002a1565b5085821015620002e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610be280620003016000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80636ebcf60711610081578063a457c2d71161005b578063a457c2d7146101c5578063a9059cbb146101d8578063dd62ed3e146101eb57600080fd5b80636ebcf6071461016757806370a082311461018757806395d89b41146101bd57600080fd5b806323b872dd116100b257806323b872dd1461012c578063313ce5671461013f578063395093511461015457600080fd5b806306fdde03146100d9578063095ea7b3146100f757806318160ddd1461011a575b600080fd5b6100e1610231565b6040516100ee91906109b4565b60405180910390f35b61010a610105366004610a49565b6102c3565b60405190151581526020016100ee565b6005545b6040519081526020016100ee565b61010a61013a366004610a73565b6102da565b60045460405160ff90911681526020016100ee565b61010a610162366004610a49565b6103f6565b61011e610175366004610aaf565b60006020819052908152604090205481565b61011e610195366004610aaf565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100e161043f565b61010a6101d3366004610a49565b61044e565b61010a6101e6366004610a49565b61055a565b61011e6101f9366004610ad1565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606002805461024090610b04565b80601f016020809104026020016040519081016040528092919081815260200182805461026c90610b04565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b60006102d0338484610567565b5060015b92915050565b60006102e784848461071b565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203384529091529020548211156103ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f47545332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160209081526040808320338085529252909120546103ec918691859003610567565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102d091859061043a908690610b86565b610567565b60606003805461024090610b04565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054819061048c908490610b99565b101561051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f47545332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103a3565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684529091529020546102d091908590859003610567565b60006102d033848461071b565b73ffffffffffffffffffffffffffffffffffffffff8316610609576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f47545332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103a3565b73ffffffffffffffffffffffffffffffffffffffff82166106ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f47545332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103a3565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f47545332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103a3565b73ffffffffffffffffffffffffffffffffffffffff8216610861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f47545332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103a3565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054811115610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f47545332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103a3565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152602081905260408082208054859003905591841681522054610956908290610b86565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161070e565b600060208083528351808285015260005b818110156109e1578581018301518582016040015282016109c5565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a4457600080fd5b919050565b60008060408385031215610a5c57600080fd5b610a6583610a20565b946020939093013593505050565b600080600060608486031215610a8857600080fd5b610a9184610a20565b9250610a9f60208501610a20565b9150604084013590509250925092565b600060208284031215610ac157600080fd5b610aca82610a20565b9392505050565b60008060408385031215610ae457600080fd5b610aed83610a20565b9150610afb60208401610a20565b90509250929050565b600181811c90821680610b1857607f821691505b602082108103610b51577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156102d4576102d4610b57565b818103818111156102d4576102d4610b5756fea2646970667358221220aee78ac4874689a39c6230c731e4354b53b38e3732a357aa52eed5c5941d1b1264736f6c63430008110033";

type GTS20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GTS20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GTS20__factory extends ContractFactory {
  constructor(...args: GTS20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GTS20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<GTS20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): GTS20 {
    return super.attach(address) as GTS20;
  }
  override connect(signer: Signer): GTS20__factory {
    return super.connect(signer) as GTS20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GTS20Interface {
    return new utils.Interface(_abi) as GTS20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GTS20 {
    return new Contract(address, _abi, signerOrProvider) as GTS20;
  }
}
