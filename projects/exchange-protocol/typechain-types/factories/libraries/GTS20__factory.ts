/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GTS20, GTS20Interface } from "../../libraries/GTS20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e8438038062000e848339810160408190526200003491620001ce565b81516200004990600290602085019062000075565b5080516200005f90600390602084019062000075565b50506004805460ff191660121790555062000288565b828054620000839062000235565b90600052602060002090601f016020900481019282620000a75760008555620000f2565b82601f10620000c257805160ff1916838001178555620000f2565b82800160010185558215620000f2579182015b82811115620000f2578251825591602001919060010190620000d5565b506200010092915062000104565b5090565b5b8082111562000100576000815560010162000105565b600082601f8301126200012c578081fd5b81516001600160401b038082111562000149576200014962000272565b604051601f8301601f19908116603f0116810190828211818310171562000174576200017462000272565b8160405283815260209250868385880101111562000190578485fd5b8491505b83821015620001b3578582018301518183018401529082019062000194565b83821115620001c457848385830101525b9695505050505050565b60008060408385031215620001e1578182fd5b82516001600160401b0380821115620001f8578384fd5b62000206868387016200011b565b935060208501519150808211156200021c578283fd5b506200022b858286016200011b565b9150509250929050565b600181811c908216806200024a57607f821691505b602082108114156200026c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610bec80620002986000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80636ebcf60711610081578063a457c2d71161005b578063a457c2d7146101c5578063a9059cbb146101d8578063dd62ed3e146101eb57600080fd5b80636ebcf6071461016757806370a082311461018757806395d89b41146101bd57600080fd5b806323b872dd116100b257806323b872dd1461012c578063313ce5671461013f578063395093511461015457600080fd5b806306fdde03146100d9578063095ea7b3146100f757806318160ddd1461011a575b600080fd5b6100e1610231565b6040516100ee9190610a93565b60405180910390f35b61010a610105366004610a6a565b6102c3565b60405190151581526020016100ee565b6005545b6040519081526020016100ee565b61010a61013a366004610a2f565b6102d9565b60045460405160ff90911681526020016100ee565b61010a610162366004610a6a565b6103f5565b61011e6101753660046109dc565b60006020819052908152604090205481565b61011e6101953660046109dc565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100e161043e565b61010a6101d3366004610a6a565b61044d565b61010a6101e6366004610a6a565b610559565b61011e6101f93660046109fd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606002805461024090610b33565b80601f016020809104026020016040519081016040528092919081815260200182805461026c90610b33565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b60006102d0338484610566565b50600192915050565b60006102e684848461071a565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203384529091529020548211156103ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f47545332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160209081526040808320338085529252909120546103eb918691859003610566565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102d0918590610439908690610b04565b610566565b60606003805461024090610b33565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054819061048b908490610b1c565b1015610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f47545332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103a2565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684529091529020546102d091908590859003610566565b60006102d033848461071a565b73ffffffffffffffffffffffffffffffffffffffff8316610608576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f47545332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103a2565b73ffffffffffffffffffffffffffffffffffffffff82166106ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f47545332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103a2565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166107bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f47545332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103a2565b73ffffffffffffffffffffffffffffffffffffffff8216610860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f47545332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103a2565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054811115610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f47545332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103a2565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152602081905260408082208054859003905591841681522054610955908290610b04565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161070d565b803573ffffffffffffffffffffffffffffffffffffffff811681146109d757600080fd5b919050565b6000602082840312156109ed578081fd5b6109f6826109b3565b9392505050565b60008060408385031215610a0f578081fd5b610a18836109b3565b9150610a26602084016109b3565b90509250929050565b600080600060608486031215610a43578081fd5b610a4c846109b3565b9250610a5a602085016109b3565b9150604084013590509250925092565b60008060408385031215610a7c578182fd5b610a85836109b3565b946020939093013593505050565b6000602080835283518082850152825b81811015610abf57858101830151858201604001528201610aa3565b81811115610ad05783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610b1757610b17610b87565b500190565b600082821015610b2e57610b2e610b87565b500390565b600181811c90821680610b4757607f821691505b60208210811415610b81577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220a19a623f0d82f64416dd44d99bac5921366bb403ac618e0f3e848070d02402d464736f6c63430008040033";

type GTS20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GTS20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GTS20__factory extends ContractFactory {
  constructor(...args: GTS20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GTS20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<GTS20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): GTS20 {
    return super.attach(address) as GTS20;
  }
  override connect(signer: Signer): GTS20__factory {
    return super.connect(signer) as GTS20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GTS20Interface {
    return new utils.Interface(_abi) as GTS20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GTS20 {
    return new Contract(address, _abi, signerOrProvider) as GTS20;
  }
}
