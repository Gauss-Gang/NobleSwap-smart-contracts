/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NobleMigrator, NobleMigratorInterface } from "../NobleMigrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryV1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610f9b380380610f9b8339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050610068677a2594cb2a70d39f60c01b61011160201b60201c565b6100826726f14c8ebf6f007a60c01b61011160201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506100d3673a0359fa44eb92e660c01b61011160201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050610114565b50565b60805160601c60a05160601c610e556101466000398061059e52806105f052806107a852508060fd5250610e556000f3fe6080604052600436106100225760003560e01c8063b7df1d251461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b506100bb600480360360a081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506100bd565b005b6100d16726cd927ee15ab80c60c01b6108a8565b6100e5674ba4becd31d2b9f260c01b6108a8565b6100f96743ec9894c1ce245760c01b6108a8565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166306f2bf62876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561019857600080fd5b505afa1580156101ac573d6000803e3d6000fd5b505050506040513d60208110156101c257600080fd5b810190808051906020019092919050505090506101e9671caf17d5bd28443160c01b6108a8565b6101fd6758c2c6130008019360c01b6108a8565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561027c57600080fd5b505afa158015610290573d6000803e3d6000fd5b505050506040513d60208110156102a657600080fd5b810190808051906020019092919050505090506102cd6780cd50a6597b374d60c01b6108a8565b6102e16775949c1b3abea4be60c01b6108a8565b6102f567a733a1f396d76f3460c01b6108a8565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b505050506040513d60208110156103da57600080fd5b810190808051906020019092919050505061045d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5452414e534645525f46524f4d5f4641494c454400000000000000000000000081525060200191505060405180910390fd5b610471677634ffccf943133560c01b6108a8565b61048567063616cc34ddc30c60c01b6108a8565b61049967b988c0fbd1ad507f60c01b6108a8565b6000808373ffffffffffffffffffffffffffffffffffffffff1663f88bf15a846001807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518563ffffffff1660e01b8152600401808581526020018481526020018381526020018281526020019450505050506040805180830381600087803b15801561052757600080fd5b505af115801561053b573d6000803e3d6000fd5b505050506040513d604081101561055157600080fd5b810190808051906020019092919080519060200190929190505050915091506105846757c7187059dca10e60c01b6108a8565b610598677c5b66a528828cc460c01b6108a8565b6105c3897f0000000000000000000000000000000000000000000000000000000000000000836108ab565b6105d767a003c9611090134560c01b6108a8565b6105eb675f259ac0f32d579760c01b6108a8565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f305d719858d868e8e8e8e6040518863ffffffff1660e01b8152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200196505050505050506060604051808303818588803b1580156106e157600080fd5b505af11580156106f5573d6000803e3d6000fd5b50505050506040513d606081101561070c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050509150915061074a6746da9dedfca2b56660c01b6108a8565b61075e675d9815a214914f1960c01b6108a8565b818311156108085761077a67a279949e32a0296960c01b6108a8565b61078e678b18c5d1b35d031660c01b6108a8565b6107a267d7521b45b7d5b74460c01b6108a8565b6107ce8b7f000000000000000000000000000000000000000000000000000000000000000060006108ab565b6107e267ba17f2013a1d6ccf60c01b6108a8565b6107f667392c14ece9c449f360c01b6108a8565b6108038b33848603610aa4565b61089b565b61081c6787e7ccabe37f30b860c01b6108a8565b610830673bd24763da40b6e560c01b6108a8565b808411156108855761084c67ee755ec37f550e9e60c01b6108a8565b61086067efab9078d344089a60c01b6108a8565b610874671d15a5f1e7635b8460c01b6108a8565b61088033828603610c9d565b61089a565b6108996727e18db552e5244160c01b6108a8565b5b5b5050505050505050505050565b50565b600060608473ffffffffffffffffffffffffffffffffffffffff1663095ea7b38585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106109845780518252602082019150602081019050602083039250610961565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146109e6576040519150601f19603f3d011682016040523d82523d6000602084013e6109eb565b606091505b5091509150818015610a2b5750600081511480610a2a5750808060200190516020811015610a1857600080fd5b81019080805190602001909291905050505b5b610a9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5472616e7366657248656c7065723a20415050524f56455f4641494c4544000081525060200191505060405180910390fd5b5050505050565b600060608473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310610b7d5780518252602082019150602081019050602083039250610b5a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610bdf576040519150601f19603f3d011682016040523d82523d6000602084013e610be4565b606091505b5091509150818015610c245750600081511480610c235750808060200190516020811015610c1157600080fd5b81019080805190602001909291905050505b5b610c96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5472616e7366657248656c7065723a205452414e534645525f4641494c45440081525060200191505060405180910390fd5b5050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff81118015610ccf57600080fd5b506040519080825280601f01601f191660200182016040528015610d025781602001600182028036833780820191505090505b506040518082805190602001908083835b60208310610d365780518252602082019150602081019050602083039250610d13565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610d98576040519150601f19603f3d011682016040523d82523d6000602084013e610d9d565b606091505b5050905080610df7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610dfd6023913960400191505060405180910390fd5b50505056fe5472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544a2646970667358221220b680cc28c57c9e19cf7fa88c4224cb71dc6d2282d0ce9f85440b839d9807914164736f6c63430006060033";

type NobleMigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NobleMigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NobleMigrator__factory extends ContractFactory {
  constructor(...args: NobleMigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factoryV1: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NobleMigrator> {
    return super.deploy(
      _factoryV1,
      _router,
      overrides || {}
    ) as Promise<NobleMigrator>;
  }
  override getDeployTransaction(
    _factoryV1: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factoryV1, _router, overrides || {});
  }
  override attach(address: string): NobleMigrator {
    return super.attach(address) as NobleMigrator;
  }
  override connect(signer: Signer): NobleMigrator__factory {
    return super.connect(signer) as NobleMigrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NobleMigratorInterface {
    return new utils.Interface(_abi) as NobleMigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NobleMigrator {
    return new Contract(address, _abi, signerOrProvider) as NobleMigrator;
  }
}
