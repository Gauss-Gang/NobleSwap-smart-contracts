/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MockGTS20, MockGTS20Interface } from "../../testing/MockGTS20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b0538038062002b0583398181016040528101906200003791906200060e565b828262000055676b1c5df2cda8f06560c01b6200010660201b60201c565b62000071672077619e7756979d60c01b6200010660201b60201c565b8160029081620000829190620008e9565b506200009f67dbaac5950cbd8c0560c01b6200010660201b60201c565b8060039081620000b09190620008e9565b50620000cd67d103a184870c671e60c01b6200010660201b60201c565b6012600460006101000a81548160ff021916908360ff1602179055505050620000fd33826200010960201b60201c565b50505062000aeb565b50565b6200012567f45fdafe2d06388f60c01b6200010660201b60201c565b6200014167c7f08a8933857bc760c01b6200010660201b60201c565b6200015d6746500df9fac0fe5260c01b6200010660201b60201c565b620001796763ebc149b08118cc60c01b6200010660201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001eb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001e29062000a31565b60405180910390fd5b6200020767d38997a30d0cd1f560c01b6200010660201b60201c565b6200022367656ae615a11e3bc360c01b6200010660201b60201c565b6200023f675369620d644d3b6160c01b6200010660201b60201c565b6200025360008383620003fe60201b60201c565b6200026f679ca5607580c27dac60c01b6200010660201b60201c565b806005600082825462000283919062000a82565b92505081905550620002a667caf8af56be7401c260c01b6200010660201b60201c565b620002c26782863f6258ceeadc60c01b6200010660201b60201c565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506200032a676366f04bf4e6c2fc60c01b6200010660201b60201c565b6200034667e61972a95aef8a4860c01b6200010660201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003a6919062000ace565b60405180910390a3620003ca67587fc42650e90e4860c01b6200010660201b60201c565b620003e667f9bb9495b07d137160c01b6200010660201b60201c565b620003fa600083836200041f60201b60201c565b5050565b6200041a6735366e4525a315f660c01b6200010660201b60201c565b505050565b6200043b67c4cea48b769475e660c01b6200010660201b60201c565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004a9826200045e565b810181811067ffffffffffffffff82111715620004cb57620004ca6200046f565b5b80604052505050565b6000620004e062000440565b9050620004ee82826200049e565b919050565b600067ffffffffffffffff8211156200051157620005106200046f565b5b6200051c826200045e565b9050602081019050919050565b60005b83811015620005495780820151818401526020810190506200052c565b60008484015250505050565b60006200056c6200056684620004f3565b620004d4565b9050828152602081018484840111156200058b576200058a62000459565b5b6200059884828562000529565b509392505050565b600082601f830112620005b857620005b762000454565b5b8151620005ca84826020860162000555565b91505092915050565b6000819050919050565b620005e881620005d3565b8114620005f457600080fd5b50565b6000815190506200060881620005dd565b92915050565b6000806000606084860312156200062a57620006296200044a565b5b600084015167ffffffffffffffff8111156200064b576200064a6200044f565b5b6200065986828701620005a0565b935050602084015167ffffffffffffffff8111156200067d576200067c6200044f565b5b6200068b86828701620005a0565b92505060406200069e86828701620005f7565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006fb57607f821691505b602082108103620007115762000710620006b3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200077b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200073c565b6200078786836200073c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620007ca620007c4620007be84620005d3565b6200079f565b620005d3565b9050919050565b6000819050919050565b620007e683620007a9565b620007fe620007f582620007d1565b84845462000749565b825550505050565b600090565b6200081562000806565b62000822818484620007db565b505050565b5b818110156200084a576200083e6000826200080b565b60018101905062000828565b5050565b601f8211156200089957620008638162000717565b6200086e846200072c565b810160208510156200087e578190505b620008966200088d856200072c565b83018262000827565b50505b505050565b600082821c905092915050565b6000620008be600019846008026200089e565b1980831691505092915050565b6000620008d98383620008ab565b9150826002028217905092915050565b620008f482620006a8565b67ffffffffffffffff81111562000910576200090f6200046f565b5b6200091c8254620006e2565b620009298282856200084e565b600060209050601f8311600181146200096157600084156200094c578287015190505b620009588582620008cb565b865550620009c8565b601f198416620009718662000717565b60005b828110156200099b5784890151825560018201915060208501945060208101905062000974565b86831015620009bb5784890151620009b7601f891682620008ab565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000a19601f83620009d0565b915062000a2682620009e1565b602082019050919050565b6000602082019050818103600083015262000a4c8162000a0a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000a8f82620005d3565b915062000a9c83620005d3565b925082820190508082111562000ab75762000ab662000a53565b5b92915050565b62000ac881620005d3565b82525050565b600060208201905062000ae5600083018462000abd565b92915050565b61200a8062000afb6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636ebcf6071161008c57806397304ced1161006657806397304ced1461024c578063a457c2d714610268578063a9059cbb14610298578063dd62ed3e146102c8576100df565b80636ebcf607146101ce57806370a08231146101fe57806395d89b411461022e576100df565b806323b872dd116100bd57806323b872dd14610150578063313ce56714610180578063395093511461019e576100df565b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610132575b600080fd5b6100ec6102f8565b6040516100f991906117f4565b60405180910390f35b61011c600480360381019061011791906118af565b6103c6565b604051610129919061190a565b60405180910390f35b61013a610448565b6040516101479190611934565b60405180910390f35b61016a6004803603810190610165919061194f565b61048e565b604051610177919061190a565b60405180910390f35b6101886106f3565b60405161019591906119be565b60405180910390f35b6101b860048036038101906101b391906118af565b610746565b6040516101c5919061190a565b60405180910390f35b6101e860048036038101906101e391906119d9565b610856565b6040516101f59190611934565b60405180910390f35b610218600480360381019061021391906119d9565b61086e565b6040516102259190611934565b60405180910390f35b6102366108f2565b60405161024391906117f4565b60405180910390f35b61026660048036038101906102619190611a06565b6109c0565b005b610282600480360381019061027d91906118af565b6109cd565b60405161028f919061190a565b60405180910390f35b6102b260048036038101906102ad91906118af565b610c0a565b6040516102bf919061190a565b60405180910390f35b6102e260048036038101906102dd9190611a33565b610c8c565b6040516102ef9190611934565b60405180910390f35b606061030e67399106bfb88f529760c01b610d4f565b61032267882d70b8d547a77660c01b610d4f565b610336672c65c7a89638d07a60c01b610d4f565b6002805461034390611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461036f90611aa2565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050905090565b60006103dc678bb61a75334f10dd60c01b610d4f565b6103f0674c88bf47bb1f28dd60c01b610d4f565b610404678f346006dea2bb0660c01b610d4f565b61041661040f610d52565b8484610d96565b61042a673fbd4535947053cb60c01b610d4f565b61043e6784acbb56a392064160c01b610d4f565b6001905092915050565b600061045e671fcefc02dc7d2db960c01b610d4f565b61047267ac2306d0b2eb031860c01b610d4f565b610486674454fcb5b68df90960c01b610d4f565b600554905090565b60006104a4678b1dbe3105874b1a60c01b610d4f565b6104b867013cb22b6830d60560c01b610d4f565b6104cc67f0005c41ff6921d560c01b610d4f565b6104d784848461104f565b6104eb677573dcc8eeca169360c01b610d4f565b6104ff6755ac89fcbb4d1b7860c01b610d4f565b6105136705e289187373b2fc60c01b610d4f565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061055c610d52565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090611b45565b60405180910390fd5b6105ed670e1a7ebdd29d6cce60c01b610d4f565b6106016779417c454118053160c01b610d4f565b61061567e7723cfc7e47040b60c01b610d4f565b61062967d9de16cfb62ec48360c01b610d4f565b6106c084610635610d52565b84600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061067f610d52565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610d96565b6106d467d012c69a1137839060c01b610d4f565b6106e8678f7f113a85fd06a160c01b610d4f565b600190509392505050565b6000610709671017738acab4a31860c01b610d4f565b61071d67c3203af13f60853660c01b610d4f565b61073167e1e94dc2b97b4ad260c01b610d4f565b600460009054906101000a900460ff16905090565b600061075c6782ef246e8b81ba4260c01b610d4f565b6107706711e0cff9e7e8c86460c01b610d4f565b61078467ef46679cf3eb4d0b60c01b610d4f565b61082461078f610d52565b84846001600061079d610d52565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461081f9190611b94565b610d96565b6108386771f72c18d367558060c01b610d4f565b61084c67655a33db1fa8ed8b60c01b610d4f565b6001905092915050565b60006020528060005260406000206000915090505481565b60006108846739146e84e779354660c01b610d4f565b610898677b3bdacd2fd1fc0760c01b610d4f565b6108ac6746b3a08c7d908d7360c01b610d4f565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061090867fa8fa3cf7e7bd66160c01b610d4f565b61091c67beebf5058023ef9460c01b610d4f565b6109306794e37872df30d04460c01b610d4f565b6003805461093d90611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461096990611aa2565b80156109b65780601f1061098b576101008083540402835291602001916109b6565b820191906000526020600020905b81548152906001019060200180831161099957829003601f168201915b5050505050905090565b6109ca33826114c1565b50565b60006109e367fa24be77d2ab526960c01b610d4f565b6109f767c7d2353e25c4e81960c01b610d4f565b610a0b67702d06e2711d181360c01b610d4f565b610a1f67981e687575b91e2d60c01b610d4f565b60008260016000610a2e610d52565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab09190611bc8565b1015610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae890611c6e565b60405180910390fd5b610b056750fba7d65d349dea60c01b610d4f565b610b1967588db6b71b3f3e9260c01b610d4f565b610b2d67fa78776050bdac1360c01b610d4f565b610b4167719781fad8463aa560c01b610d4f565b610bd8610b4c610d52565b848460016000610b5a610d52565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610d96565b610bec6710f52ca7a73bd02660c01b610d4f565b610c0067dd79b1738abceb8160c01b610d4f565b6001905092915050565b6000610c2067ce4478ebbc9c8b8960c01b610d4f565b610c346794f162dcf7381aef60c01b610d4f565b610c4867d8ff87e15db54f2860c01b610d4f565b610c5a610c53610d52565b848461104f565b610c6e67395c5ca543497a7160c01b610d4f565b610c82679cf42b4a0fcf15f660c01b610d4f565b6001905092915050565b6000610ca26775295872453cf8bf60c01b610d4f565b610cb66795a07a15923866a160c01b610d4f565b610cca67258899af2c8ec18960c01b610d4f565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b6000610d6867239165e580f2266260c01b61172f565b610d7c674c7f9327f69a310260c01b61172f565b610d9067e172116c22108f4360c01b61172f565b33905090565b610daa6738e73b7b7cafd20b60c01b610d4f565b610dbe67df9c8f583f8575f260c01b610d4f565b610dd2679e2db087e1819cf160c01b610d4f565b610de667e37bf7f6fbb2350860c01b610d4f565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611d00565b60405180910390fd5b610e696787b293192d6a4e9e60c01b610d4f565b610e7d677393e46085705baa60c01b610d4f565b610e9167f926bff58116c26860c01b610d4f565b610ea567d8cd379ef6f0ac6660c01b610d4f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0b90611d92565b60405180910390fd5b610f2867c36e7339aff29f9160c01b610d4f565b610f3c678daf24a85381653660c01b610d4f565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fd167dfd05c666ccd6f9460c01b610d4f565b610fe5671b40d15541a1029960c01b610d4f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110429190611934565b60405180910390a3505050565b61106367c1fc5e14050bf09860c01b610d4f565b61107767a21f0819ee9746c460c01b610d4f565b61108b67f62de9fe0c2b7a1d60c01b610d4f565b61109f67426b6ea4c4c56cae60c01b610d4f565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361110e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110590611e24565b60405180910390fd5b61112267db534b15bc68bd1060c01b610d4f565b61113667df2dd5399f5eb55160c01b610d4f565b61114a679546f7ca02aef26e60c01b610d4f565b61115e67c6aa311d06381d9760c01b610d4f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c490611eb6565b60405180910390fd5b6111e167ade75a51fa7cf7ed60c01b610d4f565b6111f567d68b48639bd5a87260c01b610d4f565b61120866d1dad1763708f460c01b610d4f565b611213838383611732565b611227674956f3083049ee0560c01b610d4f565b61123b67ccebef20d5ae91bf60c01b610d4f565b61124f67e97e835dffa7c49560c01b610d4f565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c790611f48565b60405180910390fd5b6112e467dfe1f77fcbb7c6ab60c01b610d4f565b6112f8673f912c2a5d0e649960c01b610d4f565b61130c678d651c66dfa53d4360c01b610d4f565b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113a3676526c7ed137b7c8e60c01b610d4f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ed9190611b94565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611443678dc531d79849745860c01b610d4f565b61145767afbfa9354f4eb63a60c01b610d4f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114b49190611934565b60405180910390a3505050565b6114d567f45fdafe2d06388f60c01b610d4f565b6114e967c7f08a8933857bc760c01b610d4f565b6114fd6746500df9fac0fe5260c01b610d4f565b6115116763ebc149b08118cc60c01b610d4f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157790611fb4565b60405180910390fd5b61159467d38997a30d0cd1f560c01b610d4f565b6115a867656ae615a11e3bc360c01b610d4f565b6115bc675369620d644d3b6160c01b610d4f565b6115c860008383611732565b6115dc679ca5607580c27dac60c01b610d4f565b80600560008282546115ee9190611b94565b9250508190555061160967caf8af56be7401c260c01b610d4f565b61161d6782863f6258ceeadc60c01b610d4f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555061167d676366f04bf4e6c2fc60c01b610d4f565b61169167e61972a95aef8a4860c01b610d4f565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116ef9190611934565b60405180910390a361170b67587fc42650e90e4860c01b610d4f565b61171f67f9bb9495b07d137160c01b610d4f565b61172b6000838361174b565b5050565b50565b6117466735366e4525a315f660c01b610d4f565b505050565b61175f67c4cea48b769475e660c01b610d4f565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561179e578082015181840152602081019050611783565b60008484015250505050565b6000601f19601f8301169050919050565b60006117c682611764565b6117d0818561176f565b93506117e0818560208601611780565b6117e9816117aa565b840191505092915050565b6000602082019050818103600083015261180e81846117bb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118468261181b565b9050919050565b6118568161183b565b811461186157600080fd5b50565b6000813590506118738161184d565b92915050565b6000819050919050565b61188c81611879565b811461189757600080fd5b50565b6000813590506118a981611883565b92915050565b600080604083850312156118c6576118c5611816565b5b60006118d485828601611864565b92505060206118e58582860161189a565b9150509250929050565b60008115159050919050565b611904816118ef565b82525050565b600060208201905061191f60008301846118fb565b92915050565b61192e81611879565b82525050565b60006020820190506119496000830184611925565b92915050565b60008060006060848603121561196857611967611816565b5b600061197686828701611864565b935050602061198786828701611864565b92505060406119988682870161189a565b9150509250925092565b600060ff82169050919050565b6119b8816119a2565b82525050565b60006020820190506119d360008301846119af565b92915050565b6000602082840312156119ef576119ee611816565b5b60006119fd84828501611864565b91505092915050565b600060208284031215611a1c57611a1b611816565b5b6000611a2a8482850161189a565b91505092915050565b60008060408385031215611a4a57611a49611816565b5b6000611a5885828601611864565b9250506020611a6985828601611864565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611aba57607f821691505b602082108103611acd57611acc611a73565b5b50919050565b7f47545332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611b2f60288361176f565b9150611b3a82611ad3565b604082019050919050565b60006020820190508181036000830152611b5e81611b22565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b9f82611879565b9150611baa83611879565b9250828201905080821115611bc257611bc1611b65565b5b92915050565b6000611bd382611879565b9150611bde83611879565b9250828203905081811115611bf657611bf5611b65565b5b92915050565b7f47545332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611c5860258361176f565b9150611c6382611bfc565b604082019050919050565b60006020820190508181036000830152611c8781611c4b565b9050919050565b7f47545332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611cea60248361176f565b9150611cf582611c8e565b604082019050919050565b60006020820190508181036000830152611d1981611cdd565b9050919050565b7f47545332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d7c60228361176f565b9150611d8782611d20565b604082019050919050565b60006020820190508181036000830152611dab81611d6f565b9050919050565b7f47545332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611e0e60258361176f565b9150611e1982611db2565b604082019050919050565b60006020820190508181036000830152611e3d81611e01565b9050919050565b7f47545332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611ea060238361176f565b9150611eab82611e44565b604082019050919050565b60006020820190508181036000830152611ecf81611e93565b9050919050565b7f47545332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611f3260268361176f565b9150611f3d82611ed6565b604082019050919050565b60006020820190508181036000830152611f6181611f25565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611f9e601f8361176f565b9150611fa982611f68565b602082019050919050565b60006020820190508181036000830152611fcd81611f91565b905091905056fea26469706673582212205246d9ff6ff5451789f9ec76aca009675a8357ee2fa2b6db4ca63b287dddcd7364736f6c63430008110033";

type MockGTS20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockGTS20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockGTS20__factory extends ContractFactory {
  constructor(...args: MockGTS20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockGTS20> {
    return super.deploy(
      name,
      symbol,
      supply,
      overrides || {}
    ) as Promise<MockGTS20>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, supply, overrides || {});
  }
  override attach(address: string): MockGTS20 {
    return super.attach(address) as MockGTS20;
  }
  override connect(signer: Signer): MockGTS20__factory {
    return super.connect(signer) as MockGTS20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGTS20Interface {
    return new utils.Interface(_abi) as MockGTS20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGTS20 {
    return new Contract(address, _abi, signerOrProvider) as MockGTS20;
  }
}
