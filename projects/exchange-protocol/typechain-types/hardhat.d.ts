/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IGTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGTS20__factory>;
    getContractFactory(
      name: "INobleCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INobleCallee__factory>;
    getContractFactory(
      name: "INobleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INobleFactory__factory>;
    getContractFactory(
      name: "INobleGTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INobleGTS20__factory>;
    getContractFactory(
      name: "INobleMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INobleMigrator__factory>;
    getContractFactory(
      name: "INoblePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INoblePair__factory>;
    getContractFactory(
      name: "INobleRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INobleRouter01__factory>;
    getContractFactory(
      name: "INobleRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INobleRouter02__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IWGANG",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWGANG__factory>;
    getContractFactory(
      name: "GTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GTS20__factory>;
    getContractFactory(
      name: "WGANG",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WGANG__factory>;
    getContractFactory(
      name: "NobleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NobleFactory__factory>;
    getContractFactory(
      name: "NobleGTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NobleGTS20__factory>;
    getContractFactory(
      name: "NoblePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoblePair__factory>;
    getContractFactory(
      name: "NobleRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NobleRouter__factory>;
    getContractFactory(
      name: "NobleRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NobleRouter01__factory>;
    getContractFactory(
      name: "MockGTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockGTS20__factory>;
    getContractFactory(
      name: "MockGTS20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockGTS20__factory>;

    getContractAt(
      name: "IGTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGTS20>;
    getContractAt(
      name: "INobleCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INobleCallee>;
    getContractAt(
      name: "INobleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INobleFactory>;
    getContractAt(
      name: "INobleGTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INobleGTS20>;
    getContractAt(
      name: "INobleMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INobleMigrator>;
    getContractAt(
      name: "INoblePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INoblePair>;
    getContractAt(
      name: "INobleRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INobleRouter01>;
    getContractAt(
      name: "INobleRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INobleRouter02>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IWGANG",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWGANG>;
    getContractAt(
      name: "GTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GTS20>;
    getContractAt(
      name: "WGANG",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WGANG>;
    getContractAt(
      name: "NobleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NobleFactory>;
    getContractAt(
      name: "NobleGTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NobleGTS20>;
    getContractAt(
      name: "NoblePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NoblePair>;
    getContractAt(
      name: "NobleRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NobleRouter>;
    getContractAt(
      name: "NobleRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NobleRouter01>;
    getContractAt(
      name: "MockGTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockGTS20>;
    getContractAt(
      name: "MockGTS20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockGTS20>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
