/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MasterChef,
  MasterChefInterface,
} from "../../MasterChef.sol/MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract NobleToken",
        name: "_noble",
        type: "address",
      },
      {
        internalType: "contract NobleBar",
        name: "_xNOBLE",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_noblePerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IGTS20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noble",
    outputs: [
      {
        internalType: "contract NobleToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noblePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingNoble",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IGTS20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accNoblePerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xNOBLE",
    outputs: [
      {
        internalType: "contract NobleBar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160055560006009553480156200001b57600080fd5b5060405162002566380380620025668339810160408190526200003e91620001e3565b62000049336200017a565b600180546001600160a01b03199081166001600160a01b03978816908117835560028054831697891697909717909655600380548216958816959095179094556004928355600a829055604080516080810182529586526103e86020870181815291870193845260006060880181815260078054958601815590915296517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688939095029283018054909616949097169390931790935590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689830155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a82015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b9091015560095562000248565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620001e057600080fd5b50565b600080600080600060a08688031215620001fc57600080fd5b85516200020981620001ca565b60208701519095506200021c81620001ca565b60408701519094506200022f81620001ca565b6060870151608090970151959894975095949392505050565b61230e80620002586000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635315a2e1116101045780638d88a90e116100a2578063a57a9b3511610071578063a57a9b351461042c578063d49e77cd1461044c578063e2bbb1581461046c578063f2fde38b1461047f57600080fd5b80638d88a90e146103a15780638da5cb5b146103b45780638dbb1e3a146103d257806393f1a40b146103e557600080fd5b806364482f79116100de57806364482f791461035d578063715018a6146103705780637cd07e47146103785780638aa285501461039857600080fd5b80635315a2e1146103395780635ffe614614610342578063630b5ba11461035557600080fd5b806341441d3b1161017157806348cd4cb11161014b57806348cd4cb1146102c55780634f2ddf62146102ce57806351eb05a6146103135780635312ea8e1461032657600080fd5b806341441d3b1461028c578063441a3e701461029f578063454b0608146102b257600080fd5b806317caf6f1116101ad57806317caf6f11461024a5780631eaaa0451461025357806323cf31181461026657806334ee16431461027957600080fd5b8063081e3eda146101d45780631058d281146101eb5780631526fe2714610200575b600080fd5b6007545b6040519081526020015b60405180910390f35b6101fe6101f936600461204f565b610492565b005b61021361020e36600461204f565b610747565b6040805173ffffffffffffffffffffffffffffffffffffffff909516855260208501939093529183015260608201526080016101e2565b6101d860095481565b6101fe610261366004612098565b610798565b6101fe6102743660046120da565b61096c565b6101d86102873660046120f7565b610a34565b6101fe61029a36600461204f565b610bbf565b6101fe6102ad366004612127565b610e02565b6101fe6102c036600461204f565b61106b565b6101d8600a5481565b6001546102ee9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e2565b6101fe61032136600461204f565b61141b565b6101fe61033436600461204f565b6116b1565b6101d860045481565b6101fe61035036600461204f565b6117d5565b6101fe61185b565b6101fe61036b366004612149565b611886565b6101fe611998565b6006546102ee9073ffffffffffffffffffffffffffffffffffffffff1681565b6101d860055481565b6101fe6103af3660046120da565b611a25565b60005473ffffffffffffffffffffffffffffffffffffffff166102ee565b6101d86103e0366004612127565b611aed565b6104176103f33660046120f7565b60086020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101e2565b6002546102ee9073ffffffffffffffffffffffffffffffffffffffff1681565b6003546102ee9073ffffffffffffffffffffffffffffffffffffffff1681565b6101fe61047a366004612127565b611b08565b6101fe61048d3660046120da565b611d0b565b600060076000815481106104a8576104a8612177565b600091825260208083203384527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c79091526040909220805460049092029092019250831115610558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f77697468647261773a206e6f7420676f6f64000000000000000000000000000060448201526064015b60405180910390fd5b610562600061141b565b600061059c826001015461059664e8d4a5100061059087600301548760000154611e3b90919063ffffffff16565b90611e47565b90611e53565b905080156105ae576105ae3382611e5f565b831561065e5781546105c09085611e53565b825582546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810186905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906044016020604051808303816000875af1158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c91906121a6565b505b600383015482546106799164e8d4a510009161059091611e3b565b60018301556002546040517f9dc29fac0000000000000000000000000000000000000000000000000000000081523360048201526024810186905273ffffffffffffffffffffffffffffffffffffffff90911690639dc29fac90604401600060405180830381600087803b1580156106f057600080fd5b505af1158015610704573d6000803e3d6000fd5b5050604051868152600092503391507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b6007818154811061075757600080fd5b6000918252602090912060049091020180546001820154600283015460039093015473ffffffffffffffffffffffffffffffffffffffff9092169350919084565b60005473ffffffffffffffffffffffffffffffffffffffff163314610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b80156108275761082761185b565b6000600a54431161083a57600a5461083c565b435b60095490915061084c9085611eef565b6009556040805160808101825273ffffffffffffffffffffffffffffffffffffffff85811682526020820187815292820184815260006060840181815260078054600181018255925293517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600490920291820180547fffffffffffffffffffffffff000000000000000000000000000000000000000016919094161790925592517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68982015591517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a830155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b90910155610966611efb565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008060078481548110610a4a57610a4a612177565b6000918252602080832087845260088252604080852073ffffffffffffffffffffffffffffffffffffffff8981168752935280852060049485029092016003810154815492517f70a08231000000000000000000000000000000000000000000000000000000008152309681019690965290965091949193919216906370a0823190602401602060405180830381865afa158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1091906121c3565b9050836002015443118015610b2457508015155b15610b8a576000610b39856002015443611aed565b90506000610b666009546105908860010154610b6060045487611e3b90919063ffffffff16565b90611e3b565b9050610b85610b7e846105908464e8d4a51000611e3b565b8590611eef565b935050505b610bb2836001015461059664e8d4a51000610590868860000154611e3b90919063ffffffff16565b9450505050505b92915050565b60006007600081548110610bd557610bd5612177565b600091825260208083203384527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c790915260408320600490920201925090610c1c9061141b565b805415610c65576000610c51826001015461059664e8d4a5100061059087600301548760000154611e3b90919063ffffffff16565b90508015610c6357610c633382611e5f565b505b8215610d1b5781546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810185905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303816000875af1158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b91906121a6565b508054610d189084611eef565b81555b60038201548154610d369164e8d4a510009161059091611e3b565b60018201556002546040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810185905273ffffffffffffffffffffffffffffffffffffffff909116906340c10f1990604401600060405180830381600087803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b5050604051858152600092503391507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505050565b81600003610e6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f7769746864726177204e4f424c4520627920756e7374616b696e670000000000604482015260640161054f565b600060078381548110610e8157610e81612177565b600091825260208083208684526008825260408085203386529092529220805460049092029092019250831115610f14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f77697468647261773a206e6f7420676f6f640000000000000000000000000000604482015260640161054f565b610f1d8461141b565b6000610f4b826001015461059664e8d4a5100061059087600301548760000154611e3b90919063ffffffff16565b90508015610f5d57610f5d3382611e5f565b831561100d578154610f6f9085611e53565b825582546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810186905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906044016020604051808303816000875af1158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b91906121a6565b505b600383015482546110289164e8d4a510009161059091611e3b565b6001830155604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b60065473ffffffffffffffffffffffffffffffffffffffff166110ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6d6967726174653a206e6f206d69677261746f72000000000000000000000000604482015260640161054f565b6000600782815481106110ff576110ff612177565b60009182526020822060049182020180546040517f70a08231000000000000000000000000000000000000000000000000000000008152309381019390935290935073ffffffffffffffffffffffffffffffffffffffff16919082906370a0823190602401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a591906121c3565b6006546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526024810183905291925083169063095ea7b3906044016020604051808303816000875af1158015611220573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124491906121a6565b506006546040517fce5494bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152600092169063ce5494bb906024016020604051808303816000875af11580156112b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112dc91906121dc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015611349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136d91906121c3565b82146113d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6d6967726174653a206261640000000000000000000000000000000000000000604482015260640161054f565b83547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9190911617909255505050565b60006007828154811061143057611430612177565b906000526020600020906004020190508060020154431161144f575050565b80546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e191906121c3565b9050806000036114f657504360029091015550565b6000611506836002015443611aed565b9050600061152d6009546105908660010154610b6060045487611e3b90919063ffffffff16565b60015460035491925073ffffffffffffffffffffffffffffffffffffffff908116916340c10f19911661156184600a611e47565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b1580156115cc57600080fd5b505af11580156115e0573d6000803e3d6000fd5b50506001546002546040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015260248101869052911692506340c10f199150604401600060405180830381600087803b15801561165a57600080fd5b505af115801561166e573d6000803e3d6000fd5b5050505061169c6116918461059064e8d4a5100085611e3b90919063ffffffff16565b600386015490611eef565b60038501555050436002909201919091555050565b6000600782815481106116c6576116c6612177565b600091825260208083208584526008825260408085203380875293529384902060049384029091018054825495517fa9059cbb00000000000000000000000000000000000000000000000000000000815294850193909352602484019490945292935073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af1158015611768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178c91906121a6565b508054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b600555565b60075460005b81811015611882576118728161141b565b61187b81612228565b9050611861565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611907576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b80156119155761191561185b565b60006007848154811061192a5761192a612177565b9060005260206000209060040201600101549050826007858154811061195257611952612177565b9060005260206000209060040201600101819055508281146109665761198d8361198783600954611e5390919063ffffffff16565b90611eef565b600955610966611efb565b60005473ffffffffffffffffffffffffffffffffffffffff163314611a19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b611a236000611fda565b565b60035473ffffffffffffffffffffffffffffffffffffffff163314611aa6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6465763a207775743f0000000000000000000000000000000000000000000000604482015260640161054f565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600554600090611b0190610b608486611e53565b9392505050565b81600003611b72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6465706f736974204e4f424c45206279207374616b696e670000000000000000604482015260640161054f565b600060078381548110611b8757611b87612177565b60009182526020808320868452600882526040808520338652909252922060049091029091019150611bb88461141b565b805415611c01576000611bed826001015461059664e8d4a5100061059087600301548760000154611e3b90919063ffffffff16565b90508015611bff57611bff3382611e5f565b505b8215611cb75781546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810185905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd906064016020604051808303816000875af1158015611c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca791906121a6565b508054611cb49084611eef565b81555b60038201548154611cd29164e8d4a510009161059091611e3b565b6001820155604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590602001610739565b60005473ffffffffffffffffffffffffffffffffffffffff163314611d8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054f565b73ffffffffffffffffffffffffffffffffffffffff8116611e2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161054f565b611e3881611fda565b50565b6000611b018284612260565b6000611b018284612277565b6000611b0182846122b2565b6002546040517fe8de259800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063e8de259890604401600060405180830381600087803b158015611ed357600080fd5b505af1158015611ee7573d6000803e3d6000fd5b505050505050565b6000611b0182846122c5565b600754600060015b82811015611f5457611f4260078281548110611f2157611f21612177565b90600052602060002090600402016001015483611eef90919063ffffffff16565b9150611f4d81612228565b9050611f03565b50801561188257611f66816003611e47565b9050611fa6816119876007600081548110611f8357611f83612177565b906000526020600020906004020160010154600954611e5390919063ffffffff16565b600981905550806007600081548110611fc157611fc1612177565b9060005260206000209060040201600101819055505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561206157600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114611e3857600080fd5b8015158114611e3857600080fd5b6000806000606084860312156120ad57600080fd5b8335925060208401356120bf81612068565b915060408401356120cf8161208a565b809150509250925092565b6000602082840312156120ec57600080fd5b8135611b0181612068565b6000806040838503121561210a57600080fd5b82359150602083013561211c81612068565b809150509250929050565b6000806040838503121561213a57600080fd5b50508035926020909101359150565b60008060006060848603121561215e57600080fd5b833592506020840135915060408401356120cf8161208a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156121b857600080fd5b8151611b018161208a565b6000602082840312156121d557600080fd5b5051919050565b6000602082840312156121ee57600080fd5b8151611b0181612068565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612259576122596121f9565b5060010190565b8082028115828204841417610bb957610bb96121f9565b6000826122ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b81810381811115610bb957610bb96121f9565b80820180821115610bb957610bb96121f956fea2646970667358221220b14f37b91ca67e2077bd79881734b638918a78c92c4b4cea523b018bbe8d208664736f6c63430008110033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _noble: PromiseOrValue<string>,
    _xNOBLE: PromiseOrValue<string>,
    _devaddr: PromiseOrValue<string>,
    _noblePerBlock: PromiseOrValue<BigNumberish>,
    _startBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _noble,
      _xNOBLE,
      _devaddr,
      _noblePerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  override getDeployTransaction(
    _noble: PromiseOrValue<string>,
    _xNOBLE: PromiseOrValue<string>,
    _devaddr: PromiseOrValue<string>,
    _noblePerBlock: PromiseOrValue<BigNumberish>,
    _startBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _noble,
      _xNOBLE,
      _devaddr,
      _noblePerBlock,
      _startBlock,
      overrides || {}
    );
  }
  override attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  override connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
