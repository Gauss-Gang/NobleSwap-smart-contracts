/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ScheduledTokenLock,
  ScheduledTokenLockInterface,
} from "../../../upgradable-libs/contracts/ScheduledTokenLock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGTS20_UPG",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender_",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsList_",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "lockTimes_",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IGTS20_UPG",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052600060355534801561001557600080fd5b5060405161085e38038061085e833981016040819052610034916101e0565b6001600160a01b0380871660805285811660a052841660c052603483905581516100659060369060208501906100b8565b5080516100799060379060208401906100b8565b50426038556037805460009061009157610091610286565b90600052602060002001546038546100a9919061029c565b603355506102c3945050505050565b8280548282559060005260206000209081019282156100f3579160200282015b828111156100f35782518255916020019190600101906100d8565b506100ff929150610103565b5090565b5b808211156100ff5760008155600101610104565b6001600160a01b038116811461012d57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261015757600080fd5b815160206001600160401b038083111561017357610173610130565b8260051b604051601f19603f8301168101818110848211171561019857610198610130565b6040529384528581018301938381019250878511156101b657600080fd5b83870191505b848210156101d5578151835291830191908301906101bc565b979650505050505050565b60008060008060008060c087890312156101f957600080fd5b865161020481610118565b602088015190965061021581610118565b604088015190955061022681610118565b6060880151608089015191955093506001600160401b038082111561024a57600080fd5b6102568a838b01610146565b935060a089015191508082111561026c57600080fd5b5061027989828a01610146565b9150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b808201808211156102bd57634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c0516105606102fe600039600081816084015261035f0152600060d0015260008181610120015261032301526105606000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806386d1a69f1161005b57806386d1a69f14610106578063b91d400114610110578063f6b4dfb414610118578063fc0c546a1461011e57600080fd5b806338af3eed1461008257806367e404ce146100ce5780636ab28bc8146100f4575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000006100a4565b6034545b6040519081526020016100c5565b61010e610144565b005b6033546100f8565b306100a4565b7f00000000000000000000000000000000000000000000000000000000000000006100a4565b6000603454116101db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5363686564756c6564546f6b656e4c6f636b3a206e6f20746f6b656e73206c6560448201527f667420696e20636f6e747261637400000000000000000000000000000000000060648201526084015b60405180910390fd5b60335442101561026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5363686564756c6564546f6b656e4c6f636b3a2072656c656173652074696d6560448201527f206973206265666f72652063757272656e742074696d6500000000000000000060648201526084016101d2565b600060366035548154811061028457610284610477565b9060005260206000200154905060008111610321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5363686564756c6564546f6b656e4c6f636b3a206e6f20746f6b656e7320746f60448201527f2072656c6561736500000000000000000000000000000000000000000000000060648201526084016101d2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f00000000000000000000000000000000000000000000000000000000000000006040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018490526044016020604051808303816000875af11580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906104a6565b506035546104239060016104fe565b603555603454610434908290610517565b60345560375460355410156104745760376035548154811061045857610458610477565b906000526020600020015460385461047091906104fe565b6033555b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156104b857600080fd5b815180151581146104c857600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610511576105116104cf565b92915050565b81810381811115610511576105116104cf56fea2646970667358221220dd548010611b3b66c8e81ec696aac1df4414a43fcd00c8771c6d7e0612f3487f64736f6c63430008110033";

type ScheduledTokenLockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScheduledTokenLockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScheduledTokenLock__factory extends ContractFactory {
  constructor(...args: ScheduledTokenLockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token_: PromiseOrValue<string>,
    sender_: PromiseOrValue<string>,
    beneficiary_: PromiseOrValue<string>,
    amount_: PromiseOrValue<BigNumberish>,
    amountsList_: PromiseOrValue<BigNumberish>[],
    lockTimes_: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScheduledTokenLock> {
    return super.deploy(
      token_,
      sender_,
      beneficiary_,
      amount_,
      amountsList_,
      lockTimes_,
      overrides || {}
    ) as Promise<ScheduledTokenLock>;
  }
  override getDeployTransaction(
    token_: PromiseOrValue<string>,
    sender_: PromiseOrValue<string>,
    beneficiary_: PromiseOrValue<string>,
    amount_: PromiseOrValue<BigNumberish>,
    amountsList_: PromiseOrValue<BigNumberish>[],
    lockTimes_: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      sender_,
      beneficiary_,
      amount_,
      amountsList_,
      lockTimes_,
      overrides || {}
    );
  }
  override attach(address: string): ScheduledTokenLock {
    return super.attach(address) as ScheduledTokenLock;
  }
  override connect(signer: Signer): ScheduledTokenLock__factory {
    return super.connect(signer) as ScheduledTokenLock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScheduledTokenLockInterface {
    return new utils.Interface(_abi) as ScheduledTokenLockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScheduledTokenLock {
    return new Contract(address, _abi, signerOrProvider) as ScheduledTokenLock;
  }
}
